import { countriesResolver } from "./resolvers";
import {
  Country,
  Iso3166Status,
  Region,
  CountryNameType,
} from "./src/generated/graphql";

describe("resolvers", () => {
  it("returns basic data for a country", () => {
    const country = {
      name: {
        common: "Barbados",
        official: "Barbados",
        native: { eng: { official: "Barbados", common: "Barbados" } },
      },
      tld: [".bb"],
      cca2: "BB",
      ccn3: "052",
      cca3: "BRB",
      cioc: "BAR",
      independent: true,
      status: "officially-assigned",
      currencies: { BBD: { name: "Barbadian dollar", symbol: "$" } },
      idd: { root: "+1", suffixes: ["246"] },
      capital: ["Bridgetown"],
      altSpellings: ["BB"],
      region: "Americas",
      subregion: "Caribbean",
      languages: { eng: "English" },
      translations: {
        ces: { official: "Barbados", common: "Barbados" },
        cym: { official: "Barbados", common: "Barbados" },
        deu: { official: "Barbados", common: "Barbados" },
        est: { official: "Barbados", common: "Barbados" },
        fin: { official: "Barbados", common: "Barbados" },
        fra: { official: "Barbade", common: "Barbade" },
        hrv: { official: "Barbados", common: "Barbados" },
        hun: { official: "Barbados", common: "Barbados" },
        ita: { official: "Barbados", common: "Barbados" },
        jpn: { official: "„Éê„É´„Éê„Éâ„Çπ", common: "„Éê„É´„Éê„Éâ„Çπ" },
        kor: { official: "Î∞îÎ≤†Ïù¥ÎèÑÏä§", common: "Î∞îÎ≤†Ïù¥ÎèÑÏä§" },
        nld: { official: "Barbados", common: "Barbados" },
        per: { official: "ÿ®ÿßÿ±ÿ®ÿßÿØŸàÿ≥", common: "ÿ®ÿßÿ±ÿ®ÿßÿØŸàÿ≥" },
        pol: { official: "Barbados", common: "Barbados" },
        por: { official: "Barbados", common: "Barbados" },
        rus: { official: "–ë–∞—Ä–±–∞–¥–æ—Å", common: "–ë–∞—Ä–±–∞–¥–æ—Å" },
        slk: { official: "Barbados", common: "Barbados" },
        spa: { official: "Barbados", common: "Barbados" },
        urd: { official: "ÿ®ÿßÿ±ÿ®ÿß⁄àŸàÿ≥", common: "ÿ®ÿßÿ±ÿ®ÿß⁄àŸàÿ≥" },
        zho: { official: "Â∑¥Â∑¥Â§öÊñØ", common: "Â∑¥Â∑¥Â§öÊñØ" },
      },
      latlng: [13.16666666, -59.53333333],
      landlocked: false,
      borders: [],
      area: 430,
      flag: "üáßüáß",
      demonyms: {
        eng: { f: "Barbadian", m: "Barbadian" },
        fra: { f: "Barbadienne", m: "Barbadien" },
      },
      callingCodes: ["+1246"],
    };

    const expected: Country = {
      name: "Barbados",
      officialName: "Barbados",
      names: [
        {
          code: "eng",
          official: "Barbados",
          common: "Barbados",
          type: CountryNameType.Native,
        },
        {
          code: "ces",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "cym",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "deu",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "est",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "fin",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "fra",
          type: CountryNameType.Translated,
          official: "Barbade",
          common: "Barbade",
        },
        {
          code: "hrv",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "hun",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "ita",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "jpn",
          type: CountryNameType.Translated,
          official: "„Éê„É´„Éê„Éâ„Çπ",
          common: "„Éê„É´„Éê„Éâ„Çπ",
        },
        {
          code: "kor",
          type: CountryNameType.Translated,
          official: "Î∞îÎ≤†Ïù¥ÎèÑÏä§",
          common: "Î∞îÎ≤†Ïù¥ÎèÑÏä§",
        },
        {
          code: "nld",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "per",
          type: CountryNameType.Translated,
          official: "ÿ®ÿßÿ±ÿ®ÿßÿØŸàÿ≥",
          common: "ÿ®ÿßÿ±ÿ®ÿßÿØŸàÿ≥",
        },
        {
          code: "pol",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "por",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "rus",
          type: CountryNameType.Translated,
          official: "–ë–∞—Ä–±–∞–¥–æ—Å",
          common: "–ë–∞—Ä–±–∞–¥–æ—Å",
        },
        {
          code: "slk",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "spa",
          type: CountryNameType.Translated,
          official: "Barbados",
          common: "Barbados",
        },
        {
          code: "urd",
          type: CountryNameType.Translated,
          official: "ÿ®ÿßÿ±ÿ®ÿß⁄àŸàÿ≥",
          common: "ÿ®ÿßÿ±ÿ®ÿß⁄àŸàÿ≥",
        },
        {
          code: "zho",
          type: CountryNameType.Translated,
          official: "Â∑¥Â∑¥Â§öÊñØ",
          common: "Â∑¥Â∑¥Â§öÊñØ",
        },
      ],
      currencies: [{ code: "BBD", name: "Barbadian dollar", symbol: "$" }],
      tld: [".bb"],
      cca2: "BB",
      ccn3: "052",
      cca3: "BRB",
      cioc: "BAR",
      independent: true,
      status: Iso3166Status.OfficiallyAssigned,
      capitalCities: ["Bridgetown"],
      altSpellings: ["BB"],
      region: Region.Americas,
      subregion: "Caribbean",

      emoji: "üáßüáß",
    };

    const result = countriesResolver([country])()[0];
    expect(result).toEqual(expected);
  });
});
